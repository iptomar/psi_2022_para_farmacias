<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>